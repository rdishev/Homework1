package com.example.demo.web;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.example.demo.entity.Warehouse;
import com.example.demo.repository.WarehouseRepository;

public class WarehouseController {

	@Autowired
	private WarehouseRepository warehouseRepository;
	
	@RequestMapping(value="/warehouse", method = RequestMethod.POST)
	public ResponseEntity<Warehouse> addWarehouse(@RequestBody Warehouse warehouse){
		warehouseRepository.save(warehouse);
		return new ResponseEntity<>(HttpStatus.CREATED);
	}
	
	@RequestMapping(value="/warehouse/{id}", method = RequestMethod.GET)
	public ResponseEntity<Warehouse> findById(@PathVariable Long id){
		Optional<Warehouse> optWarehouse = warehouseRepository.findById(id);
		if (optWarehouse.isPresent()){
			return new ResponseEntity<>(optWarehouse.get(), HttpStatus.OK);
		}
		return new ResponseEntity<>(HttpStatus.NOT_FOUND);
	}
	
	@RequestMapping(value="/warehouse/name/{name}", method = RequestMethod.GET)
	public ResponseEntity<List<Warehouse>> findByName(@PathVariable String name){
		if(name == null || name.isEmpty()) {
			return new ResponseEntity<>(HttpStatus.BAD_REQUEST);
		}
		List<Warehouse> warehouse = warehouseRepository.findByName(name);
		return new ResponseEntity<>(warehouse, HttpStatus.OK);
	}
	
	@RequestMapping(value="/warehouse", method = RequestMethod.PUT)
	public ResponseEntity<Warehouse> updateWarehouse(@RequestBody Warehouse warehouse){
		if(warehouse.getId() == null) {
			return new ResponseEntity<>(HttpStatus.BAD_REQUEST);
		}
		Optional<Warehouse> warehouseOpt = warehouseRepository.findById(warehouse.getId());
		if(!warehouseOpt.isPresent()) {
			return new ResponseEntity<>(HttpStatus.BAD_REQUEST);
		}
		Warehouse updatedRecord = warehouseRepository.save(warehouse);
		return new ResponseEntity<>(updatedRecord, HttpStatus.ACCEPTED);
	}
	
	@RequestMapping(value="/warehouse", method = RequestMethod.DELETE)
	public ResponseEntity<Warehouse> deleteWarehouse(@RequestBody Warehouse warehouse){
		if(warehouse.getId() == null) {
			return new ResponseEntity<>(HttpStatus.BAD_REQUEST);
		}
		Optional<Warehouse> warehouseOpt = warehouseRepository.findById(warehouse.getId());
		if(!warehouseOpt.isPresent()) {
			return new ResponseEntity<>(HttpStatus.BAD_REQUEST);
		}
		warehouseRepository.delete(warehouse);
		return new ResponseEntity<>(HttpStatus.ACCEPTED);
}
